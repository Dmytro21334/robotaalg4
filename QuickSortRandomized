import java.util.Arrays;
import java.util.Random;

public class QuickSortRandomized {

    private static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    private static int randomizedPartition(int[] arr, int first, int last) {
        Random rand = new Random();
        int pivotIndex = rand.nextInt(last - first + 1) + first;
        swap(arr, pivotIndex, last);
        return partition(arr, first, last);
    }

    private static int partition(int[] arr, int first, int last) {
        int pivot = arr[last];
        int i = first - 1;
        for (int j = first; j < last; j++) {
            if (arr[j] <= pivot) {
                i++;
                swap(arr, i, j);
            }
        }
        swap(arr, i + 1, last);
        return i + 1;
    }

    public static void quickSort(int[] arr, int first, int last) {
        if (first < last) {
            int pi = randomizedPartition(arr, first, last);
            quickSort(arr, first, pi - 1);
            quickSort(arr, pi + 1, last);
        }
    }

    public static void main(String[] args) {
        int[] arr = new int[100];
        Random rand = new Random();

        for (int i = 0; i < arr.length; i++) {
            arr[i] = rand.nextInt(100) + 1;
        }

        System.out.println("Масив до сортування:");
        System.out.println(Arrays.toString(arr));

        quickSort(arr, 0, arr.length - 1);

        System.out.println("Масив після сортування:");
        System.out.println(Arrays.toString(arr));
    }
}
