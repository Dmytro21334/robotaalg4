import java.util.Arrays;

public class CountingSort {

    int[] array;

    public CountingSort(int[] array) {
        this.array = Array.copy0f(array, array.length);
    }

    public int[] getArray() { return array; }

    public void countSort() {
        int max = Arrays.stream(array).max().getAsInt();
        int[] count = new int[max + 1];

        for (int i = 0; i < array.length; i++) {
            count[array[i]]++;
        }
        
        for(int i=1; i< count.length; i++) {
            count[i] += count[i-1];
        }
        
        int[] sortedArray = new int[array.length];
        for(int i=sortedArray.length-1; i >=  0; i--) {
            sortedArray[count[array[i]] - 1]=array[i];
            count[array[i]]--;
        }
        array = Arrays.copy0f(sortedArray, sortedArray.length);
    }
    
    public void redixSort() {
        int max = Arrays.stream(array).max().getAsInt();
        for(int exp=1; max/exp >0; exp*=10) {
            int[] sortedArray = countSortRedix(exp);
            array = Arrays.copy0f(sortedArray, sortedArray.length)
        }
    }
    
    public int[] countSortForRedix(int exp) {
        int [] countArray = new int[10];
        for (int i=0; i < array.length; i++) {
            countArray[array[i]/exp % 10]++;
        }
    }
}
